import { useState } from "react";
import type { Dispatch, SetStateAction } from "react";
import recommended_data from "../../data/16_recommendations.json";
import { ArrowUp } from "lucide-react";
import { DragCloseDrawer } from "./Drawer";
import { BounceCard, CardTitle } from "./BounceCard";
import { motion } from "framer-motion";
export const RecommendedSection = () => {
  const [open_nutrition, setOpen_nutrition] = useState(false);
  const [open_health, setOpen_health] = useState(false);
  const [open_diet, setOpen_diet] = useState(false);
  const [open_allergen, setOpen_allergen] = useState(false);

  type DrawerName =
    | "Nutrition Goal Based Meals"
    | "Health or Medical Goals"
    | "Dietary Preference Meals"
    | "Allergen Specific Meals";

  interface DrawerInfo {
    openState: boolean;
    setOpenState: Dispatch<SetStateAction<boolean>>;
    categoryName: string;
  }

  const drawers: Record<DrawerName, DrawerInfo> = {
    "Nutrition Goal Based Meals": {
      openState: open_nutrition,
      setOpenState: setOpen_nutrition,
      categoryName: "Nutritional Goal-Based",
    },
    "Health or Medical Goals": {
      openState: open_health,
      setOpenState: setOpen_health,
      categoryName: "Health/Medical Goals",
    },
    "Dietary Preference Meals": {
      openState: open_diet,
      setOpenState: setOpen_diet,
      categoryName: "Dietary Preference",
    },
    "Allergen Specific Meals": {
      openState: open_allergen,
      setOpenState: setOpen_allergen,
      categoryName: "Allergen-Specific",
    },
  };

  return (
    <section
      id="recommended"
      className="mx-auto max-w-7xl px-4 py-12 text-slate-800"
    >
      <motion.div
        initial={{ opacity: 0, scale: 0 }}
        whileInView={{ scale: 1, opacity: 1 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5, ease: "easeOut" }}
        className="mb-8 flex flex-col items-start justify-between gap-4 md:flex-row md:items-end md:px-8"
      >
        <h2 className="text-4xl font-bold md:text-5xl">
          Today's
          <br />
          <span className="text-slate-400"> recommended meals</span>
          <br />
          <span className="text-slate-600 text-sm md:text-xl font-bold">
            <strong>*</strong> All recommendations are generated by AI. Please
            double check nutritional information or consult with a health
            professional or dietitian before making dietary decisions.
          </span>
        </h2>
      </motion.div>
      <motion.div
        initial={{ opacity: 0, scale: 0 }}
        whileInView={{ scale: 1, opacity: 1 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5, ease: "easeOut" }}
        className="mb-4 grid grid-cols-12 gap-4"
      >
        <BounceCard className="col-span-12 md:col-span-4">
          <CardTitle>Nutritional Goal-Based</CardTitle>
          <div className="absolute bottom-0 left-4 right-4 top-32 translate-y-8 rounded-t-2xl bg-gradient-to-br from-[#e21833] to-[#e21833] p-4 transition-transform duration-[250ms] group-hover:translate-y-4 group-hover:rotate-[2deg]">
            <span
              onClick={() => setOpen_nutrition(true)}
              className="block text-center font-semibold text-white"
            >
              <div className="flex justify justify-center items-center mb-7">
                <ArrowUp />
              </div>
              VIEW
            </span>
          </div>
        </BounceCard>
        <BounceCard className="col-span-12 md:col-span-8">
          <CardTitle>Health/Medical Goals</CardTitle>
          <div className="absolute bottom-0 left-4 right-4 top-32 translate-y-8 rounded-t-2xl bg-gradient-to-br from-[#ffd200] to-[#ffd200] p-4 transition-transform duration-[250ms] group-hover:translate-y-4 group-hover:rotate-[2deg]">
            <span
              onClick={() => setOpen_health(true)}
              className="block text-center font-semibold"
            >
              <div className="flex justify justify-center items-center mb-7">
                <ArrowUp className="text-black" />
              </div>
              VIEW
            </span>
          </div>
        </BounceCard>
      </motion.div>
      <motion.div
        initial={{ opacity: 0, scale: 0 }}
        whileInView={{ scale: 1, opacity: 1 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5, ease: "easeOut" }}
        className="grid grid-cols-12 gap-4"
      >
        <BounceCard className="col-span-12 md:col-span-8">
          <CardTitle>Dietary Preference</CardTitle>
          <div className="absolute bottom-0 left-4 right-4 top-32 translate-y-8 rounded-t-2xl bg-gradient-to-br from-[#000] to-[#000] p-4 transition-transform duration-[250ms] group-hover:translate-y-4 group-hover:rotate-[2deg]">
            <span
              onClick={() => setOpen_diet(true)}
              className="block text-center font-semibold text-white"
            >
              <div className="flex justify justify-center items-center mb-7">
                <ArrowUp />
              </div>
              VIEW
            </span>
          </div>
        </BounceCard>
        <BounceCard className="col-span-12 md:col-span-4">
          <CardTitle>Allergen-Specific</CardTitle>
          <div className="absolute bottom-0 left-4 right-4 top-32 translate-y-8 rounded-t-2xl bg-gradient-to-br from-[#fff] to-[#fff] p-4 transition-transform duration-[250ms] group-hover:translate-y-4 group-hover:rotate-[2deg]">
            <span
              onClick={() => setOpen_allergen(true)}
              className="block justify-center text-center font-semibold"
            >
              <div className="flex justify justify-center items-center mb-7">
                <ArrowUp className="text-black" />
              </div>
              VIEW
            </span>
          </div>
        </BounceCard>
        {(Object.entries(drawers) as [DrawerName, DrawerInfo][]).map(
          ([drawer, drawer_info]) => (
            <DragCloseDrawer
              open={drawer_info.openState}
              setOpen={drawer_info.setOpenState}
            >
              <div className="mx-auto max-w-7xl space-y-6 text-neutral-400 p-4">
                <h2 className="text-4xl font-extrabold text-neutral-100 tracking-wide">
                  {drawer}
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  <div>
                    <h3 className="text-2xl font-bold text-neutral-200 mb-4">
                      Breakfast
                    </h3>
                    <div className="space-y-6">
                      {recommended_data
                        .filter(
                          (f) =>
                            f.category === drawer_info.categoryName &&
                            f.occasion === "Breakfast"
                        )
                        .map((food, idx) => (
                          <div
                            key={idx}
                            className="bg-neutral-800 border border-neutral-700 rounded-2xl p-6 shadow-md space-y-4 hover:bg-neutral-790 transition-colors"
                          >
                            <div className="flex items-baseline justify-between">
                              <h4 className="text-lg font-bold text-neutral-100">
                                {food.subcategory}
                              </h4>
                              <span className="text-sm font-medium bg-neutral-700 px-3 py-1 rounded-full">
                                {food.total_calories} Cal
                              </span>
                            </div>
                            <div className="grid grid-cols-3 gap-4 text-center">
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Protein
                                </p>
                                <p>{food.macros.protein} g</p>
                              </div>
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Fat
                                </p>
                                <p>{food.macros.fat} g</p>
                              </div>
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Carbs
                                </p>
                                <p>{food.macros.carbs} g</p>
                              </div>
                            </div>
                            <div>
                              <p className="font-semibold text-neutral-200 mb-2">
                                Items:
                              </p>
                              <ul className="list-disc list-inside space-y-1 text-neutral-300">
                                {food.items_name.map((item, i) => (
                                  <li key={i}>{item}</li>
                                ))}
                              </ul>
                            </div>
                            <div>
                              <p className="font-semibold text-neutral-200 mb-2">
                                Suggestions:
                              </p>
                              <ul className="list-decimal list-inside space-y-1 italic text-neutral-300">
                                {food.suggestions.map((s, i) => (
                                  <li key={i}>{s}</li>
                                ))}
                              </ul>
                            </div>
                          </div>
                        ))}
                    </div>
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-neutral-200 mb-4">
                      Lunch
                    </h3>
                    <div className="space-y-6">
                      {recommended_data
                        .filter(
                          (f) =>
                            f.category === drawer_info.categoryName &&
                            f.occasion === "Lunch"
                        )
                        .map((food, idx) => (
                          <div
                            key={idx}
                            className="bg-neutral-800 border border-neutral-700 rounded-2xl p-6 shadow-md space-y-4 hover:bg-neutral-790 transition-colors"
                          >
                            <div className="flex items-baseline justify-between">
                              <h4 className="text-lg font-bold text-neutral-100">
                                {food.subcategory}
                              </h4>
                              <span className="text-sm font-medium bg-neutral-700 px-3 py-1 rounded-full">
                                {food.total_calories} Cal
                              </span>
                            </div>
                            <div className="grid grid-cols-3 gap-4 text-center">
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Protein
                                </p>
                                <p>{food.macros.protein} g</p>
                              </div>
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Fat
                                </p>
                                <p>{food.macros.fat} g</p>
                              </div>
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Carbs
                                </p>
                                <p>{food.macros.carbs} g</p>
                              </div>
                            </div>
                            <div>
                              <p className="font-semibold text-neutral-200 mb-2">
                                Items:
                              </p>
                              <ul className="list-disc list-inside space-y-1 text-neutral-300">
                                {food.items_name.map((item, i) => (
                                  <li key={i}>{item}</li>
                                ))}
                              </ul>
                            </div>
                            <div>
                              <p className="font-semibold text-neutral-200 mb-2">
                                Suggestions:
                              </p>
                              <ul className="list-decimal list-inside space-y-1 italic text-neutral-300">
                                {food.suggestions.map((s, i) => (
                                  <li key={i}>{s}</li>
                                ))}
                              </ul>
                            </div>
                          </div>
                        ))}
                    </div>
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-neutral-200 mb-4">
                      Dinner
                    </h3>
                    <div className="space-y-6">
                      {recommended_data
                        .filter(
                          (f) =>
                            f.category === drawer_info.categoryName &&
                            f.occasion === "Dinner"
                        )
                        .map((food, idx) => (
                          <div
                            key={idx}
                            className="bg-neutral-800 border border-neutral-700 rounded-2xl p-6 shadow-md space-y-4 hover:bg-neutral-790 transition-colors"
                          >
                            <div className="flex items-baseline justify-between">
                              <h4 className="text-lg font-bold text-neutral-100">
                                {food.subcategory}
                              </h4>
                              <span className="text-sm font-medium bg-neutral-700 px-3 py-1 rounded-full">
                                {food.total_calories} Cal
                              </span>
                            </div>
                            <div className="grid grid-cols-3 gap-4 text-center">
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Protein
                                </p>
                                <p>{food.macros.protein} g</p>
                              </div>
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Fat
                                </p>
                                <p>{food.macros.fat} g</p>
                              </div>
                              <div>
                                <p className="font-semibold text-neutral-200">
                                  Carbs
                                </p>
                                <p>{food.macros.carbs} g</p>
                              </div>
                            </div>
                            <div>
                              <p className="font-semibold text-neutral-200 mb-2">
                                Items:
                              </p>
                              <ul className="list-disc list-inside space-y-1 text-neutral-300">
                                {food.items_name.map((item, i) => (
                                  <li key={i}>{item}</li>
                                ))}
                              </ul>
                            </div>
                            <div>
                              <p className="font-semibold text-neutral-200 mb-2">
                                Suggestions:
                              </p>
                              <ul className="list-decimal list-inside space-y-1 italic text-neutral-300">
                                {food.suggestions.map((s, i) => (
                                  <li key={i}>{s}</li>
                                ))}
                              </ul>
                            </div>
                          </div>
                        ))}
                    </div>
                  </div>
                </div>
              </div>
            </DragCloseDrawer>
          )
        )}
      </motion.div>
    </section>
  );
};
